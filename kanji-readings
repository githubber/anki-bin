#!/bin/sh
# find unsuspended sentences which contain kanji for which the reading field is empty
# so I can add that reading field

echo "select kanji.value, sentence.value
    from fields as sentence
        join fields as kanji on (sentence.value like ('%'||kanji.value||'%'))
        join fields as reading on (kanji.factId = reading.factId)
        join cards as sentence_card on (sentence_card.factId = sentence.factId)
        join facts as kanji_fact on (kanji_fact.id = kanji.factId)
    where
        reading.fieldModelId=1870991842743010604
        and sentence.fieldModelId=4775683831775348908
        and kanji.fieldModelId=7694462791390410032
        and reading.value=''
        and sentence_card.type>0
        order by kanji_fact.created;" | sqlite3 $ANKI_DECK | perl5i -nle '
our (%seen, $i);
my ($kanji, $sentence) = /^(.)\|(.+)$/;
print "\n\n".++$i.". \e[35m$kanji\e[m:" if $seen{$kanji}++ == 0;
$sentence =~ s/(\p{Han}*)($kanji)(\p{Han}*)/\e[36m$1\e[35m$2\e[36m$3\e[m/g;
print "  $sentence";
';

echo;

echo "select count()
    from fields as reading
    where
        reading.fieldModelId=1870991842743010604
        group by (reading.value = '');
        " | sqlite3 $ANKI_DECK | perl -e 'my ($with_reading, $without_reading) = map { chomp; $_ } <>; my $kanji = $with_reading + $without_reading; printf "Coverage: %d/%d (%.2f%%)\n", $with_reading, $kanji, 100*$with_reading/$kanji';

# example output
# 35. 球:
#   皆の者よ ここは地球という星だ
#   ガラスの球をみつけた
#   おまえどこからきた　地球か？
#
# 38. 直:
#  直ぐ行きます。
#  正直ねむい
#
# 48. 縄:
#  沖縄はずっと南の方だ
